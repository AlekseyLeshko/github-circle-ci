#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
aliases:
  - &restore_cache
    keys:
      - v2-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # Fallback in case checksum fails
      - v2-dependencies-{{ .Branch }}-

  - &save_cache
    paths:
      - node_modules
      - /usr/local/share/.cache/yarn/v4
    key: v2-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}

  - &install_dependencies yarn --no-progress --frozen-lockfile

jobs:
  flow:
    docker:
      - image: circleci/node:10.10.0
    resource_class: small
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install_dependencies
      - save_cache: *save_cache
      - run:
        name: Check flow
        command: echo "check flow"

  flow_coverage:
    docker:
      - image: circleci/node:10.10.0
    resource_class: small
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install_dependencies
      - save_cache: *save_cache
      - run:
        name: Flow coverage
        command: echo "flow coverage: 100%"

  storybook:
    docker:
      - image: circleci/node:10.10.0
    resource_class: small
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install_dependencies
      - save_cache: *save_cache
      - run: echo "Build storybook"

  bundle_analyzer:
    docker:
      - image: circleci/node:10.10.0
    resource_class: small
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install_dependencies
      - save_cache: *save_cache
      - run: echo "Bundle analyzer"

  build:
    docker:
      - image: circleci/node:10.10.0
    resource_class: small
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install_dependencies
      - save_cache: *save_cache
      - run: echo "Build project"

  deploy_to_stage:
    docker:
      - image: circleci/node:10.10.0
    resource_class: small
    steps:
      - run: echo "Deploy to stage"

  e2e_testing:
    parallelism: 2
    docker:
      - image: circleci/node:10.10.0
    resource_class: small
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install_dependencies
      - save_cache: *save_cache

      - run:
        name: Simulation e2e testing
        command: npm run test:ci

      - store_artifacts:
        path: coverage
        prefix: coverage

  unit_testing:
    docker:
      - image: circleci/node:10.10.0
    resource_class: small
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install_dependencies
      - save_cache: *save_cache

      - run:
        name: Unit testing
        command: npm run test:ci

      - store_test_results:
        path: coverage

      - store_artifacts:
        path: coverage
        prefix: coverage

workflows:
 version: 2
 main_workflow:
  jobs:
    - flow
    - flow_coverage
    - storybook
    - bundle_analyzer
    - build
    - unit_testing

    - deploy_to_stage:
      requires:
        - flow
        - flow_coverage
        - storybook
        - bundle_analyzer
        - build
        - unit_testing

    - e2e_testing:
      requires:
        - deploy_to_stage
